[["index.html", "Mastering Statistical Process Control Charts in Healthcare A practical, hands-on, step-by-step guide for data scientists using R Synopsis", " Mastering Statistical Process Control Charts in Healthcare A practical, hands-on, step-by-step guide for data scientists using R Jacob Anhøj &amp; Mohammed Amin Mohammed 2024-09-17 Synopsis This is the online version of Mastering Statistical Process Control Charts in Healthcare, a book currently under early development. INTRODUCTION About the Book (contents, target audience, prerequisites, etc.) GitHub PART 1: Understanding Variation What is SPC? History A modern definition SPC and continuous quality improvement – neither can live while the other dies The case for SPC in healthcare Understanding Variation Given two numbers, one will be bigger different numbers may come from the same process same numbers may come from different processes rolling dies and flipping coins when you throw a die and get a seven Patterns of non-random variation in time series data and their interpretation freaks shifts trends waves sawtooths(teeth?) and other repeated patterns Introducing SPC Charts Anatomy and physiology of SPC charts Testing for Non-random Variation in SPC Charts Tests based on sigma limits the 3-sigma test the Western Electric rules Runs analysis – tests based on the distribution of data points around the centre line unusually long runs unusually few crossings look mom, no control limits! – using runs analysis as stand-alone rules with run charts The Magnificent Eight Run chart I chart (aka X chart) MR chart X-bar chart S chart C chart U chart P chart Responding to SPC Signals The voice of the customer vs the voice of the process Conciliating the two voices – or, from RAGs to RICHes RAG = Red, Amber, Green RICH = Respond, Investigate, Celebrate’n Hold PART 2: Constructing SPC Charts with R Your First SPC Charts with Base R A run chart Adding control limits to produce a control chart Calculating Control Limits for “The Magnificent Eight” (minus one) I chart (to screen or not to screen?) MR chart Xbar chart (several methods for sbar) S chart C chart U chart P chart Highlighting Freaks, Shifts, and Trends One R Function to Rule Them All SPC Charts with ggplot2 Introducing qicharts2 – an R Package Tailored Specifically for SPC in Healthcare A Note on Rational Subgrouping and Sampling PART 3: Case Studies and Worked Examples Run chart P Charts for Proportion Data C and U Charts for Count and Rate Data I and MR Chart for Individual Measurement Data X-bar and S Charts for Multiple Measurement Data PART 4: Advanced SPC Techniques Small Multiple Plots for Multivariate Data Funnel Plots for Categorical Subgroups Pareto Charts for Ranking Problems SPC Charts for Rare Events T Charts for Time Between Events G Charts for Opportunities Between Cases Bernoulli CUSUM charts for binary data Prime Charts for Count Data with Very Large Sample Sizes Screened I chart (eliminating freak moving ranges before calculating limits) Improved (normalised) I chart Dual charting When to Split SPC Charts When to Transform Data Before Plotting High Frequency/Volume Data Scaling Up Charts (technical issues, tabular charts, rid) CUSUM and EWMA Charts Multivariate charts Phase One and Phase Two Applications of SPC PART 5: Best Practices and Tips Tips for Effective SPC Implementation Automating production of SPC charts Engaging stakeholders Continuous monitoring and improvement. Problems with SPC (challenges) Common Pitfalls to Avoid Data issues, misinterpretation of charts Overreacting to common cause variation (too many or over-sensitive runs rules, too tight control limits) Automating recalculation of control limits One-to-one relation between PDSA cycles and dots on the plot PART 6: Conclusion and Final Thoughts Summary of Key Points The Control Charts vs Run Charts Debate Emerging trends in SPC and healthcare analytics Encouragement for Continuous Learning and Application Final Thoughts PART 9¾: Nerd Stuff Introducing R Basic Statistical Concepts Data types (counts and measurements) Distributions centre (mean, median) spread (range, percentiles, standard deviation) shape (symmetric, skewed) Principles for Data Visualisation Histograms and boxplots for measurement data distributions Barplots for count data distributions Scatter plots for relations between measurement data Point-and-line plots for time series data Data Preparation with R Sources of healthcare data Indicator types: measurements, counts, rates, proportions Getting data in shape for visualisation with R Runs Analysis Revisited The joint distribution of longest run and Number of crossings Improving runs analysis using the bestbox and cutbox rules APPENDICES Resources and Further Readings Recommended books Web sites, forums, and communities Other R packages for SPC (qcc, spc, …) Formulas and R Functions for Calculating Control Limits Table of Parameters for the Xbar and S Charts Table of Critical Values for Longest Runs and Number of Crossings Glossary of Terms Ideas for papers RAGs to RICHes (two voices) Big data issues – CUSUM vs 3000 SPC charts Improved I chart The problem with SPC "],["preface.html", "Preface So what is different about this book? How to use this book About us", " Preface This book is about the practical application of statistical process control (SPC) methodology in healthcare. SPC is based on a fundamental intuitive insight – that processes are subject to two sources of variation: common cause and special cause variation. This simple yet profound insight enables us to monitor, understand, and improve a wide range of processes. With this insight comes a set of intuitive visual tools, run and control charts, that make it easy to tell common from special cause variation. Nevertheless a systematic review concluded … although SPC charts may be easy to use even for patients, clinicians or managers without extensive SPC training, they may not be equally simple to construct correctly. To apply SPC is, paradoxically, both simple and difficult at the same time. — (Thor et al. 2007) Consequently, this book aims to ease the construction and production of SPC charts in healthcare using modern software. So what is different about this book? This book is a how to easily produce SPC charts book. Since this involves statistics, computing, and visualisation our software of choice is R – which is often referred to as the lingua franca of statistical computing and visualisation. This book stands out by being a specialized, practical, and modern guide specifically tailored for data scientists in the healthcare sector. Its focus on real-world application, combined with comprehensive coverage of SPC techniques and the use of contemporary tools, makes it a unique and valuable resource. Target Audience: This book aims to help people who want to produce SPC charts in practice using modern software. This book is specifically tailored for data scientists who want to learn how to produce SPC charts using the R programming language. We refer to such people as data scientist whilst recognising that they may be analysts, practitioners, managers, teachers, students, researchers, clinicians or patients. Use of R: Our choice of software is R, which is popular, free, and open source. By being pro-R we are not anti any other software. Indeed we encourage readers to use this book with their preferred software and share it with the world. One major advantage of R (and programming languages in general) is that all the steps and procedures involved in analysing data and constructing graphs and other output are documented in readable form in the source code thus making analyses transparent and reproducible, which is rarely the case with “point-and-click” software. Another advantage of R is that it enables the automation of repeated tasks such as monthly reports, slide decks and dashboards of SPC charts with high quality customisable graphics. Healthcare Focus: While there are many general books on SPC, this book’s focus is on practical applications in healthcare, making it particularly relevant for those working in this field. It addresses the unique challenges and requirements of applying SPC methods in healthcare settings, such as patient safety, clinical outcomes, and operational efficiency as described in an accompanying book (Mohammed 2024). Practical Guide: The book is a practical step-by-step guide, using real-world examples and case studies that enable readers to produce and use SPC charts with confidence. This hands-on approach helps bridge the gap between theory and practice. Comprehensive Coverage: The book covers a comprehensive range of topics within SPC, from basic concepts to advanced techniques. This ensures that both beginners and experienced data scientists can find valuable insights and techniques that can be applied to their work in healthcare. Resources: The book comes with additional resources such as R scripts, datasets, and access to an online GitHub repository. Prerequisites We assume no prior knowledge of SPC, but a basic familiarity with R is required to understand the steps and algorithms for constructing SPC charts. For readers not familiar with R we refer you to some excellent (free) resources for getting started with R including the amazing NHS-R Community. How to use this book If you are new to SPC, then start with Chapter 1. If you are eager to get started with plotting then skip to chapters 6 and 7. Later chapters move to more advanced types of charts and topics for newbies and knowbies. Further resources and datasets can be found on our GitHub repository. We hope you find the book of some use and would appreciate your feedback on how it can be continually improved. About us Jacob Anhøj is a medical doctor with 30+ years of experience along with a diploma in Information Technology. He has published 45+ papers and two books and has extensive teaching experience. His main professional interest is patient safety and healthcare quality in general and statistical methods for quality improvement in particular. He has contributed to the development of statistical methods for testing for non-random variation in time series data. He is an experienced R user and has published several R packages including qicharts2 for construction and analysis of statistical process control charts. Mohammed Amin Mohammed is Emeritus Professor of Healthcare Quality and Effectiveness at the Faculty of Health Studies, University of Bradford, and Principal Consultant at the Strategy Unit. He has 100+ peer-reviewed publications, including a landmark paper in the Lancet introducing SPC to healthcare (2001) and author of the “Statistical Process Control: Elements of Improving Quality and Safety in Healthcare (2024)”. He founded the NHS-R Community which promotes the use of R in healthcare. JA: jacob@anhoej.net MAM: m.a.mohammed5@bradford.ac.uk References Mohammed, M A. 2024. Statistical Process Control. Elements of Improving Quality and Safety in Healthcare. Cambridge University Press. https://www.cambridge.org/core/elements/statistical-process-control/60B6025BF62017A9A203960A9E223C10. Thor, Johan, Jonas Lundberg, Jakob Ask, Jesper Olsson, Cheryl Carli, Karin Pukk Härenstam, and Mats Brommels. 2007. “Application of Statistical Process Control in Healthcare Improvement: Systematic Review.” BMJ Qual Saf 16: 387–99. https://doi.org/10.1136/qshc.2006.022194. "],["what.html", "Chapter 1 What is SPC", " Chapter 1 What is SPC "],["variation.html", "Chapter 2 Understanding Variation", " Chapter 2 Understanding Variation "],["charts_intro.html", "Chapter 3 Introducing SPC Charts 3.1 Anatomy and physiology of SPC charts 3.2 Some common types of control charts – The Magnificient Seven 3.3 Common SPC charts in summary", " Chapter 3 Introducing SPC Charts There are many different types of control charts and the chart to be used is determined mostly by the type of data to be plotted. But regardless of the type of data, SPC charts look the same and are interpreted the same. In this chapter we will introduce the most common types of control charts that are used in healthcare and their use cases. In Part 2 of this book we will go into detail on how to do the actual calculations involved. Basically, SPC charts are point-and-line plots of data over time. Their purpose is to help distinguish between common cause and special cause variation. Special causes are signalled by unusual patterns in data over time. by “unusual” we mean something that is unlikely to have happen purely by chance, for example getting ten heads in a row when tossing a coin. To help identify unusual patterns several statistical tests (or rules) have been developed. Before we get to the rules in Chapter 4, we will take a close look at the structure and the functionality of SPC charts. 3.1 Anatomy and physiology of SPC charts Shewhart’s brilliant invention was the idea of control limits to show the boundaries of the common cause variation in data. Data points that lie between the lines represent common cause variation and data points outside the limits represent special cause variation. Figure 3.1: Standardised control chart. SD = standard deviation; CL = centre line; LCL = lower control limit; UCL = upper control limit Figure 3.1 shows a standardised Shewhart control chart made from random numbers from a normal distribution with mean = 0 and standard deviation = 1. The x-axis represents time or order, and the y-axis represents the indicator values. The dots connected with straight lines show the data values in the order they were sampled. The data included in each data point are called subgroups. The horizontal centre line (CL) shows the overall mean of the data values, and the lower (LCL) and upper (UCL) control lines show the boundaries of the common cause variation. Together LCL and UCL are often referred to as 3-sigma limits. We see that the data points are distributed fairly symmetrically around the centre line, and that most data points are close to the centre. As we move away from the centre line, data become rarer. The control limits are positioned so that nearly all data points from a common cause process with fall between them. Conversely, data points outside the limits will most likely represent special causes. Based on empirical evidence from designed experiments involving real life data Shewhart found that in practice most process data are found within three standard deviations from the process centre. This is especially true when data, as in Figure 3.1, come from a normal distribution, where the 3-sigma limits are expected to contain over 99.7% of data. Consequently, the chance of any particular data point being outside the limits purely by chance is about three out of a thousand. Thus, in a control chart with a total of 20 data points the chance of all data points being within the control limits is about 95% (1 - 0.99720). But before we go down that rabbit hole we must realise that these theoretical considerations were rejected by Shewhart who found that most real-life data are not normally distributed. Shewhart argued that the choice of 3-sigma limits was made simply because “it works” (Shewhart (1931), p. 18). By this he meant that 3-sigma limits strike the best balance between finding or overlooking special causes regardless of the type and distribution of data. More on this later. It is important to realise that the SD in question is that of the common cause variation, not the overall, pooled SD that would include both the common and any special cause variation. The procedure for calculating – or rather estimating – the common cause SD depends on the type of data involved. 3.2 Some common types of control charts – The Magnificient Seven As described above, the control limits are positioned three times the common cause SD above and below the centre line. Thus, all types of control charts follow this general formula for control lines: \\[CL \\pm 3SD\\] So to construct a control chart, all we need to know is how to find the process standard deviation. As mentioned before, we do not use the overall SD of all the data as this would include any variation due to special causes and inflate the control limits. Instead we use a pooled average of the within subgroup SDs, which in turn depend on the type of data involved. The impatient reader may find the formulas for constructing control limits in Table 7.1 later in the book. Generally, data come in two flavours: count data and measurement data. 3.2.1 Counts Counts are positive integers that represent counts of events or cases. The distinction between events and cases is important but somewhat subtle. Events are phenomena that happen in time and space, for example patient falls. Cases are units with (or without) a certain property, for example patients who fell. When counting falls as events, every fall counts. When counting patients as units who fell, every patient counts – but only once regardless of how many times each patient fell. Both events and cases may be expressed as ratios, that is counts divided by some denominator (area of opportunity). Events may be expressed as rates, that is number of events per unit of time(or space), for example number of falls per 1,000 patient days. Cases may be expressed as proportions, that is number of cases per total number of cases and non-cases, for example the proportion (or percentage) of patients who fell one or more times. Note that with rates the denominators are in units of time or space, which are expressed as continuous variables and represent something distinctly different from the numerators. With proportions the numerators and denominators are counts of the same thing, for example patients – only the numerator is a subset of the denominator. Consequently, with proportions the numerators cannot be larger than the denominators. The most common chart types for count data are: C chart: count of events, e.g. number of patient falls. U chart: event rates, e.g. number of patient falls per unit of time. P chart: case proportions, e.g. proportion of patients who fell. 3.2.2 Measurements Measurements are data that are measured on a continuous scale and may have decimals, for example blood pressure, height and weight, or waiting times. As an example, take waiting or “door-to-needle” times. These may be plotted as either individual times where each data point (subgroup) represents one patient or as average time for all patients in a certain period of time, for example an hour, day, week, or month. When plotting individual measurement data we use the I chart (aka the X chart). When plotting the average of multiple measurement per subgroup we use the X-bar chart. Sometimes it is also useful to plot a chart of the within subgroup SDs. For this we use the moving range (MR) chart together with the I chart and the S chart together with the X-bar chart. So for measurement data we have: I and MR charts: individual measurement, subgroup size = 1. X-bar and S charts: multiple measurements, subgroup size &gt; 1. 3.3 Common SPC charts in summary In summary, a Shewhart control chart is a point-and-line plot of data over time with three added horizontal lines: the centre line representing the overall mean of data and the lower and upper control lines representing the limits of the natural process variation. While there are many types of SPC charts for different types of data they all look and behave the same. In this chapter we introduced the most common types used in healthcare, The Magnificient Seven, and their use cases. When choosing the right chart we must first decide what type of data we have. For count data there are three common types: C, U, and P charts for event counts, event rates, and proportions respectively. For measurement data we have I and X-bar charts for individual measurements and averages respectively. MR and S charts plot estimates of the within subgroup standard deviation and are often plotted alongside I and X-bar charts. In the next chapter we will discuss different techniques and rules used to detect special causes, and we will suggest a set of rules that have been thoroughly studied and validated and provide a high sensitivity to special cause variation while keeping the false alarm rate at a reasonable level. References Shewhart, Walther A. 1931. Economic Control of Quality of Manufactured Product. New York: D. Van Nostrand Company. "],["testing.html", "Chapter 4 Testing for Special Cause Variation 4.1 Patterns of non-random variation in time series data 4.2 SPC rules 4.3 Charts without borders – using runs analysis as stand-alone rules with run charts 4.4 A practical approach to SPC analysis 4.5 SPC rules in summary", " Chapter 4 Testing for Special Cause Variation So far we have mostly concerned ourselves with Shewhart’s 3-sigma rule, one or more data points outside the control limits, to detect special cause variation. The 3-sigma rule is very effective to detect large shifts in data. Imagine data from a normal distribution, if data shifted three SDs upwards, the old upper control limit would be the new centre line and we would expect about half of future data points to lie above the upper control limit. If data only shifted one SD, the old upper control limit would be the new 2-sigma limit and we would expect about 2.5% of future data points to lie above this line (Figure 4.1). Figure 4.1: Control chart with progressive shifts in data The performance of the 3-sigma rule has been studied extensively, but to make a long story short, it is most useful when looking for shift in the order of at least 1.5 - 2 SDs. Minor to moderate shifts may go unnoticed for long periods of time. In order to increase the sensitivity of SPC charts to minor shifts in data a large number of additional rules have been suggested. But before we get to these rules we will take a look at different types of patterns in data that often accompany special causes. 4.1 Patterns of non-random variation in time series data In the iconic Western Electric Handbook (Western Electric Company 1956) a large number of control chart patterns are described to help engineers interpret control charts. The idea being that certain patterns are often due to certain causes. In our experience, the most common special cause patterns found in healthcare data are freaks, shift, and trends. 4.1.1 Freaks A freak is one or few data points that are distinctly different from the rest (Figure 4.2). Freaks are by definition transient in nature – they appear and then go away. Figure 4.2: Control chart with a large (2 SD) transient shift in data Freaks are often caused by data or sampling errors, but may also be results of transient external forces acting on the process, for example temporary changes in patient case mix. Finally, freaks may simply be part of the natural process which once in a while is expected to produce extreme values simply by chance. 4.1.2 Shifts A shift is a sudden and sustained change in process centre (Figure 4.3). Minor to moderate shifts may go unnoticed by the 3-sigma rule for long periods of time. Large shifts may initially present themselves as freaks. Figure 4.3: Control chart with a minor (1 SD) sustained shift in data Shifts are caused by sudden changes in process behaviour. In healthcare improvement we strive to induce shift in the desired direction by improving the structures and procedures that are behind data. 4.1.3 Trends A trend is a gradual change in process centre (Figure 4.4). Note that in some texts a trend is more specifically a series of data points that are all larger or smaller than the previous data point. In this book, we use the term “trend” in the more general sense as a gradual change in one direction. Figure 4.4: Control chart with a trend in data Trends are seen when forces outside the usual process are pushing data consistently in one direction, and specifically when the push is continuous and the effect cumulative. Trends are commonly seen when improvements are implemented in a stepwise fashion, for example by being introduced incrementally in a large organisation. In such cases we may observe sequential shifts in data a the department level that sum up to a trend at the organisational level. 4.1.4 Other unusual patterns There are, of course, countless other types of “unusual”, not to mention mixed, patterns that may show up in data. However, it is our experience from healthcare, that process improvement or deterioration is most commonly associated with either freaks, shifts, or trends and learning to recognise these patterns is helpful in finding the underlying causes of change. That said, depending on the context and the purpose of using SPC it may be useful to look for other types of patterns in data. This is especially true for cyclic or seasonal data where specific patterns are repeated depending on the time of day, week, month, year etc. (Jeppegaard et al. 2023). For example, excess mortality related to weekend admissions may not present itself as neither freaks, shifts, or trends, but may nonetheless be important to recognise. 4.2 SPC rules If patterns of special cause variation were always as clear as in the figures 4.2, 4.3, and 4.4 there would be no need for SPC. However, in reality, special causes often show up in more subtle ways. To help objectify the analysis we use SPC rules, that is statistical tests that signal the presence – or rather, the likelihood – of special cause variation. We have already seen Shewhart’s original 3-sigma rule in action, but many more rules have been developed to help identify minor to moderate shifts, trends, and other specific patterns in data. It is tempting to simply apply all known rules to our data, but – as always in statistics – the more tests we apply, the more signals we get, and the more signals we get, the more signals are false alarms signalling special causes when really only common cause is present. Thus, it is important to select as few rules as possible to minimise the risk of false alarms but at the same time select as many rules as necessary to identify as many true alarms as possible. More on this topic later in the chapter on Diagnostic Errors later in this book. Basically there are two types of tests for special cause variation in SPC charts. Some tests are based on the distribution of data points relative to the sigma lines including 1- and 2-sigma lines, which are placed one and two SDs from the centre line respectively. And then there are tests that are based solely on the distribution of data points relative to the centre line. We will restrict ourselves to two sets of rules that have been thoroughly studied and validated. 4.2.1 Tests based on sigma limits The best known tests for special cause variation are probably the Western Electric Rules (WE) described in the Statistical Quality Control Handbook (Western Electric Company 1956). The WE rules consist of four simple tests that can be applied to control charts by visual inspection and are based on the identification of unusual patterns in the distribution of data points relative to the control and centre lines. One or more points outside of the 3-sigma limits (Shewhart’s original 3-sigma rule). Two out of three successive points beyond a 2-sigma limit (two thirds of the distance between the centre line and the control line). Four out of five successive points beyond a 1-sigma limit. A run of eight successive points on one side of the centre line. We leave it to the reader to apply WE rules #2-#4 to figures 4.3 and 4.4. The WE rules have proven their worth during most of a century. One thing to notice though is that the WE rules are most effective with control charts that have between 20 and 30 data points. With fewer data points, they lose sensitivity (more false negatives), and with more data points they lose specificity (more false positives). 4.2.2 Runs analysis – tests based on the distribution of data points around the centre line WE rule #4 is independent of the sigma limits. It is based on assumptions regarding the length of runs on either side of the centre line. A run is defined as one of more successive data points on the same side of the centre line. If we assume that the centre line splits data in two halves, the probability of any data point being above or below the centre is fifty-fifty. Similarly, the probability of any two neighbouring points being on the same or opposite side is fifty-fifty. By dichotomising data in runs of data points that are either below or above a certain value, for example the centre line, a whole branch of statistical theory called runs analysis lies at our feet. The basic idea is that the lengths and number of runs in random processes are governed by laws of nature and thus predictable within limits. In short, when a process shifts or trends, runs tend to get longer and fewer. Consequently, we may base our runs tests on finding unusually long or unusually few runs. The question now is: what constitutes “unusually” long and “unusually” few? From practical experiments, some theoretical considerations, and years of practice (Anhøj and Olesen 2014; Anhøj 2015) we suggest these two runs tests: Unusually long runs: A run is one or more consecutive data points on the same side of the centre line. Data points that fall directly on the centre line neither break nor contribute to the run. The upper 95% prediction limit for longest run in a random process is approximately \\(log_2(n)+3\\) (rounded to the nearest integer), where \\(n\\) is the number of useful data points (data points not on the centre line). For example, in a run chart with 24 useful data points a run of more than round(log2(24) + 3) = 8 would suggest a shift in the process. Unusually few crossings: Rather than counting the number of runs, we count the number of crossings, which by definition is one less than the number of runs. A crossing is when two consecutive data points are on opposite sides of the centre line. In a random process, the number of crossings follows a binomial distribution, \\(b(n-1,0.5)\\). The lower 5% prediction limit for number of crossings is found using qbinom(p = 0.05, size = n - 1, prob = 0.5). Thus, in a run chart with 24 useful data points, fewer than qbinom(0.05, 24 - 1, 0.5) = 8 crossings would suggest that the process is shifting. Figure 4.3 has 24 data points, the longest run consists of 12 data points (#13 - #24), and the line crosses the centre line 9 times. Since the longest run is longer than expected, we may conclude that there is reason to believe that the process is shifting. In Figure 4.3 there are two long runs with 9 data points and only 5 crossings also suggesting that data are shifting. Note that the tests themselves do not tell what type of patterns are in data not to mention what the underlying causes of shifts and trends are. That interpretation lies with the data analyst and the people working in the process. Critical values for longest runs and number of crossings for 10-100 data points are tabulated in Appendix B. Apart from being comparable in sensitivity and specificity to WE rules #2-#4 with 20-30 data points (Anhøj and Wentzel-Larsen 2018), these runs rules have some advantages: They do not depend on sigma limits and thus are useful as stand-alone rules with run charts (more on run charts in the next section). They adapt dynamically to the number of available data points, and can be applied to charts with as few as 10 and up to indefinitely many data points without losing sensitivity or specificity. In practice these runs rules may be used as alternatives to WE rules #2-#4 to help identify shifts and trends alongside the WE rule #1 for freaks. 4.3 Charts without borders – using runs analysis as stand-alone rules with run charts As we saw in the previous section, some rules only depend on a single line representing the centre of data. We made the assumption that the centre line is positioned such that it splits the data in two equally sized halves. In many cases the process average is a good representation of this centre, but if data are skewed in any way, this may not be the case. However, if we use the median rather than the mean of data the assumption always holds true. So what happens if we remove the sigma lines and use the median for the centre line? We get a run chart: one of the most useful inventions in quality improvement and control. Figure 4.5: Run chart Figure 4.5 is a run chart of the data from Figure 3.1. We notice that the centre line is a little different from the control chart because we have used the empirical median rather than the theoretical mean. Consequently, data are now evenly distributed around the centre line with 12 data points on each side. The longest run have 3 data points (#13-#15 and #22-#24), and the data line crosses the centre line 13 times. Since there are no unusually long runs and not unusually few crossing we conclude that this process shows no signs of persistent shifts in data. Figure 4.6 is a run chart with data from Figure 4.4 containing a trend. The runs analysis confirms our “analysis-by-eye” by finding two unusually long runs with 9 data points and unusually few crossings (4). Figure 4.6: Run chart with a trend In practice the two runs rules are two sides of the same coin – when runs get longer, crossings get fewer and vice versa – and either of them may signal non-random variation. Run charts are a lot simpler to construct than control charts. They do not make assumptions about the distribution of data. And they are more sensitive to minor to moderate persistent shifts and trends than control charts are (using only the 3-sigma rule). So why do we bother making control charts at all? In fact, we can only think of two reasons: 1) control charts quickly pick up large, possibly transient, shifts (freaks) that would go unnoticed by run charts, and 2) the control limits provide a good measure and a visual representation of the width of the natural process variation. Luckily, we do not need to choose between run and control charts. In fact, they are good companions for use at different stages of quality improvement and control. 4.4 A practical approach to SPC analysis Before we move on, let us pause for a moment and remind ourselves: What are we using SPC charts for? As discussed earlier, we use SPC mainly for two distinctly different tasks: process improvement and process monitoring. When improving processes we strive to create sustained shifts in the desired direction in data. Thus, shifts are expected. Since improvement often happens in small steps, and since we are after lasting shifts, runs analysis is our tool of choice. When monitoring processes our goal is to maintain process behaviour and stability, and we are not expecting data to shift. On the other hand, we want to pick up any signals suggesting that the process is deteriorating as quickly as possible. For this, the 3-sigma rule is particularly useful. We may chose to combine the 3-sigma rule with either the rest of the WE rules or with the two runs rules to get better sensitivity to minor to moderate shifts and trends. However, we should be aware that adding tests comes with a price of more false alarms. Regardless of the task at hand, we recommend to always begin any SPC analysis with the “assumption free” run chart using the median as centre line. If the runs rules find non-random variation, it makes no sense to compute sigma limits based on assumptions regarding the location and dispersion of data, because these figures are meaningless when one or more shifts have already been identified. (A bit like ordering a CT scan when the diagnosis has already been confirmed by conventional X-ray.) In that case, we should rather be looking for special causes than concerning ourselves with calculating control limits. Then, if our goal is process improvement, we continue with the run chart until we see significant and sustained improvement resulting in a new and better process. When this new process has stabilised itself and looks set to continue, we may consider moving into “monitoring mode” and add control limits to our chart. Monitoring a process makes sense when the process is stable (common cause variation only) and satisfactory. If that is not the case, we should start over in “improvement mode”. 4.5 SPC rules in summary SPC rules are statistical tests designed to identify signs of special cause variation in time series data. Depending on specific patterns in data suggesting special causes many rules have been suggested. However, as more and more rules are applied, the risk of false alarms increases. Consequently, it pays to select a small battery of rules that together maximises the chance of finding special causes that are there (true alarms) while minimising the risk of false alarms. We recommend to always begin any SPC analysis with a median-based run chart and the two runs rules testing for unusually long runs or unusually few crossings. If – and only if – the process is stable and satisfactory, we may chose to use the mean for centre line and to add control limits to help identify freaks and other sudden, large shifts i data. References Anhøj, Jacob. 2015. “Diagnostic Value of Run Chart Analysis: Using Likelihood Ratios to Compare Run Chart Rules on Simulated Data Series.” PLoS ONE. https://doi.org/10.1371/journal.pone.0121349. Anhøj, Jacob, and Anne Vingaard Olesen. 2014. “Run Charts Revisited: A Simulation Study of Run Chart Rules for Detection of Non-Random Variation in Health Care Processes.” PLoS ONE. https://doi.org/10.1371/journal.pone.0113825. Anhøj, Jacob, and Tore Wentzel-Larsen. 2018. “Sense and Sensibility: On the Diagnostic Value of Control Chart Rules for Detection of Shifts in Time Series Data.” BMC Medical Research Methodology. https://doi.org/10.1186/s12874-018-0564-0. Jeppegaard, Maria, Steen C. Rasmussen, Jacob Anhøj, and Lone Krebs. 2023. “Winter, Spring, Summer or Fall: Temporal Patterns in Placenta-Mediated Pregnancy Complications—an Exploratory Analysis.” Gynecol Obstet 309: 1991–98. https://doi.org/https://doi.org/10.1007/s00404-023-07094-6. Western Electric Company. 1956. Statistical Quality Control Handbook. New York: Western Electric Company inc. "],["responding.html", "Chapter 5 Responding to SPC Signals", " Chapter 5 Responding to SPC Signals "],["first-chart.html", "Chapter 6 Your First SPC Charts With Base R 6.1 A run chart of blood pressure data 6.2 Adding control limits to produce a control chart 6.3 That’s all, Folks!", " Chapter 6 Your First SPC Charts With Base R From Part 1 of this book we have a good grasp of what SPC is and how SPC charts work. In this chapter we will start constructing SPC charts using functions from base R. In later chapters we will include functions from ggplot2and qicharts2. In essence, an SPC charts is a (point-and-)line plot of data over time with a horizontal line to represent the data centre and – in case of a control chart – two lines to represent the estimated upper and lower boundaries of the natural variation in data. 6.1 A run chart of blood pressure data Consider these data, which show systolic blood pressure measurements (mm Hg) for a patient taken in the morning over 26 consecutive days (Mohammed, Worthington, and Woodall 2008). First we plot a simple point-and-line chart without any helper lines (Figure 6.1): Figure 6.1: Simple run chart (As a side note, this reminds me (JA) of a manager, who once said to me: “You make such beautiful graphs, but can’t you stop them from going up and down all the time.” 😁) To guide the runs analysis we will add the centre line, which in run charts is usually the median of the data points (Figure 6.2): Figure 6.2: Run chart with centre line We find that the longest run has 4 data points (#14-#17) and that the curve crosses the centre line 9 times. Four data points (#4, #7, #10, #26) lie directly on the centre line, so we have 22 useful observations. With 22 useful observations and using the runs rules proposed previously, the upper limit for longest run is 7 as is (coincidentally) the lower limit for number of crossings. Consequently, there are no signs of persistent shifts or trends in data over time. 6.2 Adding control limits to produce a control chart We use the same technique to add the lower and upper control limits. Remember that the control limits are usually set to \\(CL \\pm 3 SD\\), where CL is the centre line, usually the mean, and SD is the estimated standard deviation – that is, the standard deviation of the natural variation in data, not the pooled standard deviation that would include both random and any non-random variation. With data consisting of single measurements, we may estimate the common cause standard deviation using the average moving range divided by a constant, 1.128. The moving ranges are the absolute pairwise differences between consecutive data points. We will talk much more about control limits in Chapter 7. ## [1] 3 3 1 13 19 32 3 3 6 6 14 33 20 6 1 10 20 9 26 6 6 14 9 5 7 Before we plot data, we need to expand the systolic-axis limits to make room not only for the data points but also the control limits (Figure 6.3): Figure 6.3: Standardised control chart One (freak) data point is below the lower control limit suggesting that this reading has most likely been influenced by something outside the natural process. The control chart itself does not tell what caused the special cause, but it tells us that this data point should be investigated with the purpose of learning and improvement. 6.3 That’s all, Folks! So constructing an SPC chart using R may be done using a few lines of code. In fact, most of the code in this chapter went to prepare the data to be plotted. The charts themselves are rather simple and plotting is the same every time: 1. plot the dots; 2. add the lines. Later we will wrap all the steps in a function that automates the calculation of centre and control lines, highlights signals of non-random variation in data, and makes plots that are a lot nicer to look at than the rather crude ones we have produces so far. In the next chapter we will calculate lines and limits for the SPC charts that are most commonly used in healthcare, “The Magnificent Eight”. References Mohammed, M A, P Worthington, and W H Woodall. 2008. “Plotting Basic Control Charts: Tutorial Notes for Healthcare Practitioners.” BMJ Qual Saf 17 (2): 137–45. https://doi.org/10.1136/qshc.2004.012047. "],["limits.html", "Chapter 7 Calculating Control Limits 7.1 Introducing the spc() function 7.2 Count data 7.3 Measurement data 7.4 Control limits in short Control chart constants", " Chapter 7 Calculating Control Limits In the previous chapter we established the basis for constructing SPC charts with R. In this chapter we continue with different types of control charts and how to construct their control limits. 7.1 Introducing the spc() function To avoid repeating ourselves, let’s begin by creating a function to automate the plotting for us. The spc() function takes five arguments of which only the first, x, is mandatory. If only x is provided, a simple line chart will be drawn from the x values. If y is also provided, x values will be used for the x axis. The line arguments (cl, lcl, ucl) are used (if provided) for the centre line and control limits respectively. Line arguments may be given as either single values or vectors of the same length as x. In addition, one may provide additional arguments for the plot() function, e.g. main, xlab, and ylab for title and axis labels. Let us test it with the blood pressure data from Chapter 6 (Figure 7.1). Figure 7.1: Control chart of systolic blood pressure With this function we are now able to construct all kinds of control charts. All we need to know is how to calculate the centre line and the control limits. ## Formulas for calculation of control limits The formulas for calculation control limits for the most common control charts are provided in Table 7.1. Don’t be alarmed by the number of strange symbols, we will dissect the formulas one by one as we move along. Table 7.1: Formulas for calculating control limits Subgroups Chart type Control limits Assumed distribution Count data Counts C \\(\\bar{c}\\pm3\\sqrt{\\bar{c}}\\) Poisson Rates U \\(\\bar{u}\\pm3\\sqrt{\\frac{\\bar{u}}{n_{i}}}\\) Poisson Proportions P \\(\\bar{p}\\pm3\\sqrt{\\frac{\\bar{p}(1-\\bar{p})}{n_{i}}}\\) Binomial Measurement data Individual measurements I \\(\\bar{x}\\pm2.66\\overline{MR}\\) Normal Moving ranges of individual measurements MR \\(3.267\\overline{MR}\\) Normal Averrages of 2 or more measurements X-bar \\(\\bar{\\bar{x}}\\pm A_{3}\\bar{s}\\) Normal Standard deviations of 2 or more measurements S \\(B_{3}\\bar{s};\\ B_{4}\\bar{s}\\) Normal Generally, data come in two flavours: count data and measurement data. Counts are positive integers that represent counts of events or cases, for example patient falls, surgical complications, or healthy babies. Measurements are data that are measured on continuous scales and may have decimals, for example blood pressure, height and weight, or waiting times. 7.2 Count data There are several types of count data depending on the type of counts involved. In this chapter we will limit ourselves to events and cases. Events are phenomena that happens from time to time and are usually rare and randomly distributed in time and space. Events can for example be the number of cancer cells found in a microscopy slide, the number of patient falls in a month, or the number of shooting stars observed in the night sky. Events often follow the poisson distribution and are presented as raw counts or rates. Cases represent whole units that either possess or do not posses a certain property. Cases can for example be surgical procedures that had one or more complications, patients who fell, or procedures that completed according to a standard. Cases often follow the binomial distribution and are presented as proportions or percentages. For count charts in this chapter we will use the bacteremia data set: ## month ha_infections risk_days deaths patients ## 1 2017-01-01 24 32421 23 100 ## 2 2017-02-01 29 29349 22 105 ## 3 2017-03-01 26 32981 13 99 ## 4 2017-04-01 16 29588 14 85 ## 5 2017-05-01 28 30856 17 98 ## 6 2017-06-01 16 30544 15 85 The variables are: month (date): month of infection ha_infections (numeric): number of hospital acquired infections risk_days (numeric): number of patient days without infection deaths (numeric): number of patients who died within 30-day after a hospital or community acquired (all-cause) infection patients (numeric): number of patients with all-cause infection We use C charts for event counts and U chart for event rates. For case proportions we use the P chart. 7.2.1 C chart The C charts (C for counts) is the simplest of all control charts and the easiest to produce. The process standard deviation is simply estimated as the square root of the process mean. C charts are appropriate when counting events from (nearly) equally big chunks of time or space. Figure 7.2 shows a C chart of the monthly number of hospital acquired bacteremias. ## UCL = 36.94952 ## CL = 22.66667 ## LCL = 8.38381 Figure 7.2: C control chart of monthly numbers of hospital acquired bacteremias The average monthly number of cases is 22.7, and all data points are within the control limits ranging from 8.4 to 36.9. So if nothing changes, we should expect future infection counts to be around 23, and we should not be surprised if once in a while, we observe as little as 9 or as many as 36 infections in a single month. 7.2.2 U chart U charts are useful when events are counted over chunks of time or space that are not equally sized resulting in “unequal area of opportunity” (hence the U). In our case we might want to adjust for for the number of patient days that may vary depending on the time of year or between organisational units. The U chart adjust for this by presenting rates rather than raw counts. As mentioned, events are often rare in comparison to their areas of opportunity. So to avoid very small numbers on the y-axis it may be useful to multiply the y-axis by some factor before plotting. In Figure 7.3 we multiply by 10,000 to display infections per 10,000 risk days rather than per day. Figure 7.3: U chart of monthly number of infections per 10,000 risk days The U chart shows that on average we have 7.5 infections per 10,000 risk days, and that all data points are between the control limits ranging from about 3.5 to 12. We see that the control limits vary depending on the denominator (risk days), for each data point. Large denominator \\(\\Rightarrow\\) narrow limits; small denominator \\(\\Rightarrow\\) wide limits. In cases like this where the denominator – the area of opportunity – only varies little between subgroups, the U charts adds little compared to the C chart. For pedagogical reasons we may prefer the C chart, because it is a lot easier to relate to 23 infections per month than to 7.5 infections per 10,000 risk days. 7.2.3 P chart P charts are for proportions (or percentages). Figure 7.4 shows the monthly percentage of patients with bacteremia who died within 30 days. Figure 7.4: P chart of monthly 30-day mortality rates On average the mortality is 21%, and all data points are within the control limits. 7.3 Measurement data For this section we will use a data set on response times for grade 2 caesarean sections, that is, the time (in minutes) it took from the decision to perform a C-section to the baby was delivered. The goal is to keep the response times below 30 minutes. The csect data frame contains the date and time, the month, and the number of minutes from decision to delivery for 208 grade 2 section over a two-year period. ## datetime month delay ## 1 2016-01-06 03:55:40 2016-01-01 22 ## 2 2016-01-06 20:52:34 2016-01-01 22 ## 3 2016-01-07 02:50:43 2016-01-01 29 ## 4 2016-01-07 22:32:27 2016-01-01 28 ## 5 2016-01-09 14:56:09 2016-01-01 22 ## 6 2016-01-09 21:21:24 2016-01-01 20 7.3.1 I chart (aka X chart) The “I” in I chart stand for “individuals” because it plots individual values from subgroups of size 1. I charts are also often referred to as X charts. I charts are useful when measurements come from individual units, for example waiting times or blood pressure measurements for individual patients. As we will see later, I charts are in fact useful for all kinds of data because they base their estimations on the actual variation that is present in data rather than theoretical parameters from assumed distributions. For this reason, the I chart is considered the Swiss army knife of SPC. When subgroups consist of single values we use the pairwise absolute difference between data points, the average moving range (\\(\\overline{MR}\\)), as an estimate of the common cause variation. By dividing this value with 1.128 we get an estimate of the process standard deviation. Alternatively, we may multiply \\(\\overline{MR}\\) by 3 / 1.128 = 2.66 to get 3 \\(SD\\)s. Let’s have a look at individual delay times for the latest 60 C-sections (Figure 7.5). Figure 7.5: I-chart On average, the delay time for these cases is 24 minutes. The control limits tell us that we should expect future delays to be in the range of 11 to 37 minutes. Three data points are outside the control limits (#1, #4 and #31) suggesting that these cases were special and that it might be useful to have a closer look to find out what went well with case #1 and not so well with cases #4 and #31. 7.3.2 MR chart The MR chart plots the moving ranges of individual values. It is a companion to the I chart. Since moving ranges can always be zero but never negative, the MR chart has no lower control limit. Figure 7.6: MR-chart Note that there is one less moving range than individual values. To “synchronise” the charts, we insert an NA value at the beginning of the MR-chart. We may plot the two charts together (Figure 7.7): Figure 7.7: I- and MR-charts The MR-chart also finds three data points outside the limits. These coincide with two of the special causes found by the I chart and supports our conclusion that these deliveries were special. Note that each data point on the I chart (except the first and last ones) produces two moving ranges on the MR chart. 7.3.3 X-bar chart The X-bar chart is appropriate when the subgroups consist of samples of two or more measurements. To plot a control chart of the monthly average delays, we must first aggregate data to find the mean and the standard deviation of delay times and the number of sections per month. ## month delay.mean delay.sd delay.n ## 1 2016-01-01 23.85714 3.387653 7 ## 2 2016-02-01 24.45455 6.137811 11 ## 3 2016-03-01 22.45455 6.638729 11 ## 4 2016-04-01 22.66667 3.041381 9 ## 5 2016-05-01 22.50000 3.891382 8 ## 6 2016-06-01 22.00000 6.204837 5 Next, we calculate the centre line and the control limits using the formula in Table 7.1 where \\(\\bar{\\bar{x}}\\) (pronounced x bar bar) is the weighted mean of the subgroup means, \\(\\bar{s}\\) (s bar) is the weighted mean of the subgroup standard deviations, and \\(A_3\\) is a constant that depends on the subgroup size. See the section on chart constants at the end of this chapter for the R code involved in calculating \\(A_3\\) and other constants for control chart construction. With the aggregated data we are now able to construct the X-bar chart (Figure 7.8). Figure 7.8: X bar chart Figure 7.8 shows the average delay time per month. On average the delay time is 23 minutes (= centre line) and all data points fall between the control limits suggesting that the process is stable and predictable. As with U and P charts the control limits vary from month to month reflecting the varying subgroup sizes – small subgroups \\(\\Rightarrow\\) wide limits; large subgroups \\(\\Rightarrow\\) narrow limits. Be careful not to fall for the temptation to conclude that just because no months are above the target of 30 minutes all is well. The 30-minute target applies to the delay time of individual sections, not the averages. Even if the averages are well below the target, individuals may be above, which we already noticed from the I chart above. 7.3.4 S chart The S chart is usually plotted alongside the X-bar chart and shows the within subgroup variation. It is useful for detecting changes in the spread of data over time. To calculate the centre and control limits for the S chart we need to know the process standard deviation, \\(\\bar{S}\\) (same as for the X-bar chart), and the two constants \\(B_3\\) and \\(B_4\\) From Table 7.1. Figure 7.9: S chart Figure 7.9 shows the average standard deviation of delay times per month. On average the standard deviation is 4.7 minutes and all data points fall between the control limits. We may plot the X-bar and S charts together (Figure 7.10): Figure 7.10: X-bar and S charts 7.4 Control limits in short Control limits attempt to estimate the boundaries of the natural common cause process variation. They are placed 3 standard deviations above and below the centre line, which is the (weighted) mean of the subgroup means. The procedure for calculating control limits depends on the type of data involved, but the interpretation of charts are the same regardless of data type. In the next chapter we will improve our plots by adding visual clues to highlight signs of non-random variation. Control chart constants "],["highlighting.html", "Chapter 8 Highlighting Freaks, Shifts, and Trends 8.1 Introducing the cdiff data set 8.2 Improved spc() function 8.3 Highlighting special cause variation in short Runs Analysis", " Chapter 8 Highlighting Freaks, Shifts, and Trends In the previous chapter we calculated control limits for the most common types of control charts. Control limits show the boundaries of the natural common cause process variation. Thus, data points outside the control limits (freaks) are signals of special cause variation in data – that is unexpected change caused by something outside the usual system. Control limits are designed to identify rather large (&gt; 2SD), possibly transient, changes in the system. However, as discussed in Part 1 of this book, minor to moderate changes in the form of shifts or trends in data may go unnoticed by the control limits for long periods of time. For this purpose, many supplementary tests (rules) have been suggested. Most known are the Western Electric Rules introduced in the 1950s. The WE rules are based on the distribution of data points relative to the 1, 2, and 3 SD limits. Recently Anhøj et al. introduced two simple rules that rely only on the distribution of data points around the centre line, the shift and crossings rules, that look for unusually long runs of data points on the same side of the centre line or unusually few crossings of the centre line (Anhøj and Olesen (2014)). The shift and crossings rules are comparable to the WE rules in their sensitivity to minor and moderate sustained shifts and trends in data and may be used alone with run charts without control limits (Anhøj (2015), Anhøj and Wentzel-Larsen (2018)). In this chapter we will improve the spc() function to automatically visualise special cause variation in the form of freaks, shifts, and trends. 8.1 Introducing the cdiff data set The cdiff data set contains 24 observations of monthly numbers of hospital acquired Clostridioides difficile infections from an acute care hospital. ## month infections risk_days ucl lcl cl ## 1 2020-01-01 12 19801 11.77776 0 5.041667 ## 2 2020-02-01 7 18674 11.77776 0 5.041667 ## 3 2020-03-01 1 15077 11.77776 0 5.041667 ## 4 2020-04-01 4 12062 11.77776 0 5.041667 ## 5 2020-05-01 4 14005 11.77776 0 5.041667 ## 6 2020-06-01 5 14840 11.77776 0 5.041667 Figure 8.1 shows data plotted with spc() function. We see that there is one data point (#1) above the upper control limit. If we look carefully we also find an unusually long run of 11 data points below the centre line (#14-#24) and that the curve crosses the centre line only 7 times. Thus, in addition to the freak, there is also a shift in data, which is not large enough to break the limits but sustained enough to trigger the runs rules. Figure 8.1: C control chart of CDiff infections To help us identify special cause variation we will improve the spc() function. 8.2 Improved spc() function The new, improved spc() function has a few changes: Line 10: Import a function, runs.analysis(), from a separate R script to test for unusually long runs and unusually few crossings. See this function in the Runs Analysis section at the end of this chapter. Lines 19-20: If no cl argument is given, use the median for centre line. Lines 33-34: Create a logical vector identifying data points that lie outside the control limits. Line 37: Test for unusually long runs and unusually few crossings. Line 40: Start with an empty plot. Line 47-49: Format the centre line according to the result of runs analysis. Lines 56-49: Add the data line and points and colour data points outside control limits. Figure 8.2: Improved control chart with visual clues to highlight special cause variation Now it is a lot easier to immediately see if a chart contains special cause variation or not (Figure 8.2). Data points outside the limits are red, and the centre line will turn red and dashed if there are any unusually long runs in data or if the curve crossed the centre line unusually few times. Remember, the chart itself does not tell us what caused the signals. This interpretation of a chart – common or special cause variation – still relies on humans with a deep understanding the process and the data. 8.3 Highlighting special cause variation in short In this chapter we have improved the spc() function to automatically highlight signs of special cause variation using visual clues that help us quickly decide if a process is stable or not. In the next chapter we will improve the spc() function further to automatically aggregate data and calculate control limits. Runs Analysis References Anhøj, Jacob. 2015. “Diagnostic Value of Run Chart Analysis: Using Likelihood Ratios to Compare Run Chart Rules on Simulated Data Series.” PLoS ONE. https://doi.org/10.1371/journal.pone.0121349. Anhøj, Jacob, and Anne Vingaard Olesen. 2014. “Run Charts Revisited: A Simulation Study of Run Chart Rules for Detection of Non-Random Variation in Health Care Processes.” PLoS ONE. https://doi.org/10.1371/journal.pone.0113825. Anhøj, Jacob, and Tore Wentzel-Larsen. 2018. “Sense and Sensibility: On the Diagnostic Value of Control Chart Rules for Detection of Shifts in Time Series Data.” BMC Medical Research Methodology. https://doi.org/10.1186/s12874-018-0564-0. "],["r-functions.html", "Chapter 9 One R Function to Rule Them All 9.1 Examples 9.2 TODO 9.3 Further up, further in R function library", " Chapter 9 One R Function to Rule Them All Until now, we have calculated control limits manually before plotting. In this chapter we will introduce a library of functions that work together to automate all the steps involved in constructing SPC charts. We will not go through each of these functions in detail, but we encourage you to study them to get a good grasp of how they work and work together. And we encourage you to improve and adapt them to your own needs. In total there are 17 functions that work together to construct SPC charts. But the user only needs to interact with one of them, spc(). See the R functions library section at the end of this chapter for the source code. The main function, spc() is an improved version of the improved spc() function from Chapter 8. Most importantly, it is no longer necessary to calculate the limits manually. Instead, we provide a chart argument, which should be one of the following: ‘run’, ‘xbar’, ‘s’, ‘i’, ‘mr’, ‘c’, ‘u’, ‘p’. If no chart argument is provided, a run chart will be drawn. Also, we no longer have to use the clumsy $-notation or with() function to access variables inside a data frame. Instead, we may pass the name of the data frame to the data argument. Finally, we do not need to aggregate data for X-bar and S charts in advance. That job is delegated to the spc.aggregate() function, which is also responsible for calling the appropriate functions to calculate the centre line and control limits and perform the runs analysis. After doing its job, spc.aggregate() returns a data frame with all the necessary information needed to construct a plot. This, in turn, is handled by the plot.spc() function. 9.1 Examples Here are examples of each of the Magnificent Eight. See the source code at the end of this chapter for documentation of the input arguments. 9.1.1 Run chart ## date systolic diastolic pulse ## 1 2012-06-13 125 77 56 ## 2 2012-06-14 118 76 59 ## 3 2012-06-15 125 75 59 ## 4 2012-06-16 126 73 69 ## 5 2012-06-17 124 77 70 ## 6 2012-06-18 127 83 63 Figure 9.1: Run chart 9.1.2 I and MR charts for individual measurements Figure 9.2: I and MR charts 9.1.3 X-bar and S charts for averages and standard deviations of measurements ## date week dose ## 1 2014-01-06 2014-01-06 51 ## 2 2014-01-06 2014-01-06 48 ## 3 2014-01-06 2014-01-06 75 ## 4 2014-01-06 2014-01-06 53 ## 5 2014-01-06 2014-01-06 71 ## 6 2014-01-06 2014-01-06 84 Figure 9.3: X-bar and S charts 9.1.4 C and U charts for counts and rates ## month ha_infections risk_days deaths patients ## 1 2017-01-01 24 32421 23 100 ## 2 2017-02-01 29 29349 22 105 ## 3 2017-03-01 26 32981 13 99 ## 4 2017-04-01 16 29588 14 85 ## 5 2017-05-01 28 30856 17 98 ## 6 2017-06-01 16 30544 15 85 Figure 9.4: C and U charts 9.1.5 P chart for percentages Figure 9.5: P chart 9.2 TODO One obvious shortcoming of this function library is that the functions lack error checking. So if you are going to use them in a production environment or for your own SPC package you will need to build that yourself. At the least, you need to automatically check that inputs are of the expected types and that the x, y, and n arguments have the same lengths. TIP: check the stopifnot() function. 9.3 Further up, further in We now have a functioning library of R functions that automate most of the steps involved in the construction of SPC charts. There is still plenty of room for improvement. But this should get you started and – most importantly – give you a deeper understanding of the considerations involved in plotting SPC charts. In the next chapter we will take a quick look at how to use ggplot2() for plotting rather than the plot() function from base R. R function library "],["ggplot.html", "Chapter 10 SPC Charts with ggplot2", " Chapter 10 SPC Charts with ggplot2 Armed with the battery of functions from Chapter 9 we are able to construct any of the Magnificent Eight using functionality from base R. Furthermore, it is easy to add new types of SPC charts to the library. To achieve this, all we have to do is to write an appropriate spc.*() function to handle the calculations of the centre line and limits and to include the function type in thespc() function’s chart argument. Because we have used a modularised approach and made a separate function for plotting spc objects, plot.spc(), it is also a simple task to use any other plotting method. In this chapter we will build an alternative plot function, which uses ggplot2 as its plotting engine. ggplot2 has many advantages over plotting with base R function. Not because ggplot2 is able to do things that cannot be done with base R, but because it makes some operations a lot easier. For example, with ggplot2 we do not need to worry about scaling the axes to accommodate data that are added to the plot or to make room for axis labels and tick marks. These are all handled gracefully by ggplot2 itself. Also ggplot2 has an extensive theming engine that makes it (relatively) easy to customise the non-data parts of a plot, for example colour palettes, legends, and number/date formats. First we will create an spc object and assign it to a variable name for later use: Note that we suppressed the plotting and assigned the (invisible) output, which is a data frame containing the coordinates to plot, to the variable ‘p’. We can now continue working with p as with any other R object. ## [1] &quot;spc&quot; &quot;data.frame&quot; ## x y n lcl cl ucl sigma.signal runs.signal chart ## 1 2020-01-01 12 1 0 5.041667 11.77776 TRUE TRUE c ## 2 2020-02-01 7 1 0 5.041667 11.77776 FALSE TRUE c ## 3 2020-03-01 1 1 0 5.041667 11.77776 FALSE TRUE c ## 4 2020-04-01 4 1 0 5.041667 11.77776 FALSE TRUE c ## 5 2020-05-01 4 1 0 5.041667 11.77776 FALSE TRUE c ## 6 2020-06-01 5 1 0 5.041667 11.77776 FALSE TRUE c Figure 10.1: SPC chart Because p is an object of class “spc” we only need to call the generic plot() function, which in turn will pass its first argument to the specialised spc.plot() function. We may now create any number of alternative plotting functions for spc objects. In this example we will create a plotting function that uses ggplot2. Figure 10.2: SPC chart using the ggspc() function We may also turn the spc object into a ggplot2 object: ## [1] &quot;gg&quot; &quot;ggplot&quot; Figure 10.3: SPC chart with modified theme Now, if we wished, we could replace the plot.spc() function with this new function. We will leave it to you to decide which of the two you like best. The last example in this chapter demonstrates how to create our own custom theme and how to format y axis tick marks as percentages: Figure 10.4: SPC chart with labels and custom y-axis In the long run, though, we might get tired of manually designing our own theme, modifying the plot function, and formatting tick mark labels for every plot. Wouldn’t it be nice to have this done automatically for us? This is exactly what qicharts2 does. qicharts2 is an R package for plotting SPC charts and is the subject of the next chapter. qicharts2 builds on the same principles we have developed so far but has a lot more facilities for customising charts. Most importantly, qicharts2 makes it easy to produce multidimensional plots using ggplot2’s faceting methods. "],["qicharts.html", "Chapter 11 Introducing qicharts2 11.1 A simple run chart 11.2 A simple control chart 11.3 Excluding data points from analysis 11.4 Freezing baseline period 11.5 Splitting chart by period 11.6 Small multiple plots for multivariate data", " Chapter 11 Introducing qicharts2 qicharts2 (Quality Improvement Charts, Anhøj (2024), Anhøj (2018)) is an R package for SPC aimed at healthcare data analysts. It is based on the same principles that we have developed in the previous chapters of this book. It contains functions to construct all of the Magnicent Eight plus a number of specialised charts including pareto charts and control charts for rare events data. To learn everything about qichart2, visit its website: https://anhoej.github.io/qicharts2/. In this chapter we will concentrate on some key facilities that is still missing from the function library we have buld so far: excluding data points from analysis freezing and splitting charts by periods multivariate plots (small multiples) To get started with qicharts2, install it and load it into your working environment: As always, you only need to install a package once, but you need to load it every time you want to use it. Next, you may want to read the vignette: vignette('qicharts2') – or you may want to get started right away. 11.1 A simple run chart The main function of qicharts2 is qic(). It takes the same arguments as the spc() function we built previously plus many more. Check the documentation for a complete list of arguments: ?qic. To reproduce our first run chart from Chapter 6, run: Figure 11.1: Run chart produced with the qic() function from the qicharts2 package There are several things to note in Figure 11.1: Default chart title and axis labels are created automatically. These can be changed using the title, ylab, and xlab arguments. Data points that fall directly on the centre line are greyed out. These do not count as useful observation in the runs analysis. The centre line value is printed on the chart. 11.2 A simple control chart To produce a control chart, we simply add a chart argument (Figure 11.2): Figure 11.2: I chart produced with qic() By default qic() uses a grey background area to show the natural process limits. 11.3 Excluding data points from analysis Sometimes it is useful to exclude one or more data points from the calculation of control limits and from the runs analysis. This may be the case when specific data points are known to have been influenced by factors that are not part of the natural process, for example data points that fall outside the control limits. We use the exclude argument to do this: Figure 11.3: I chart with one data point excluded from calculations Notice how the values for the centre line and control limits in Figure 11.3 changed a little. Specifically, the control limits became slightly narrower. Excluding data points should be a deliberate decision and not something that is done automatically just because one or more data points are outside the control limits. Exclusion should be based on a thorough understanding of the process and only when the reason(s) for a special cause has been established. Otherwise, the whole idea of SPC as a way of understanding variation and its sources is lost. 11.4 Freezing baseline period When data have been collected for a long enough period of time to establish the centre line and control limits of a stable and predictable process – that is, a process with only common cause variation – it is often useful to “freeze” the limits and use them for future data. In production industry this technique is referred to as phase one and phase two studies. In healthcare freezing is especially useful when we have historical data from before the start of some type of intervention or improvement programme. When plotting future data with the centre line and control limits from a stable baseline period shifts and trends will show up faster than if the limits were recalculated with every new data point. The cdi dataset comes with qicharts2 and contains monthly counts of infections two years before and one year after the initiation of an improvement programme. Check the documentation for details, ?cdi. Figure 11.4: Infections before and after intervention Figure 11.4 shows a run chart of data where the centre line has been established from the baseline period (month 1-24) using the freeze argument. There is a sustained shift in data after the intervention. 11.5 Splitting chart by period When a sustained shift in data has been discovered and the cause is known it is allowable to split the graph by periods. We use the part argument for this (Figure 11.5). Figure 11.5: Splitting using index The split argument takes either the indices of the data points to split after, or we may use a categorical variable naming the time periods in which case the periods will be labelled (Figure 11.6). Figure 11.6: Splitting using a period variable As with excluding data points, freezing and splitting should be based on deliberate decisions and thorough understanding of the process. Some SPC applications allow for automatic splitting whenever a shift is detected. We strongly advise against this approach. Freezing and splitting may be useful when: there is a sustained shift in data the reason for the shift is known the shift is in the desired direction the shift is expected to continue If any of these conditions is not met we should rather look for the root cause and – if need be – eliminate it. 11.6 Small multiple plots for multivariate data Process data is all about time. But often data – not the least in healthcare – have more dimensions, which are important to understand in order to interpret data correctly. For example, the hospital_infections dataset, which is also included in the qicharts2 package, contains monthly counts of three types of hospital infections: bacteremia (BAC), C. diff. (CDI), and urinary tract infections (UTI) from six hospitals: AHH, BFH, BOH, HGH, NOH, RGH. ## hospital infection month n days ## 1 AHH BAC 2015-01-01 17 17233.67 ## 2 AHH BAC 2015-02-01 18 15308.25 ## 3 AHH BAC 2015-03-01 17 16883.67 ## 4 AHH BAC 2015-04-01 10 15463.83 ## 5 AHH BAC 2015-05-01 13 15788.96 ## 6 AHH BAC 2015-06-01 14 15660.04 In addition to the time dimension, these data have two extra dimensions, infection and hospital. Figure 11.7 shows the total (aggregated) monthly counts of hospital infections from six hospitals. Figure 11.7: Aggregated U chart of urinary tract infections from six hospital Figure 11.8 shows the same data as Figure 11.7, but this time data have been stratified into so-called small multiple plots – one plot per hospital. Figure 11.8: Stratified (small multiple) U charts of urinary tract infections from six hospital In the litterature, small multiples are also known as trellis, lattice, or grid plots. Likewise, we may construct a small multiple plot of different infection types from one hospital (Figure 11.9). Figure 11.9: U charts from one hospital stratified by infection type By default, qich() use fixed axis scales. This makes it easy to compare both the indicator levels (y-axis) and the patterns of variation over time (x-axis) between facets. However, sometimes it makes little sense to compare levels from very different indicators as in this example where different types of infections occur at very different rates. Because urinary tract infections is much more frequent that the other two types of infection, it is hard to interpret the patterns over time from these. In Figure 11.10 we use individual y-axes. Figure 11.10: Small multiple plot with individual y-axes The decision about when to use fixed or free axis scales should be taken deliberately depending on the purpose of the plot. Sometimes it may even be useful to display both plots with fixed and free axes side by side. Finally, we may want to display both dimensions, infection and hospital, at the same time as in Figure 11.11. Figure 11.11: Hospital infections stratified by infection and hospital 11.6.1 To aggregate or not to aggregate When data come from multiple organisational units, for example hospitals or hospital departments, we must decide if we want to aggregate or stratify data. Figures 11.7 and 11.8 demonstrate the difference. Notice how the aggregated data show no signs of special causes while the stratified data show non-random shifts in two hospitals (BOH and NOH). If data, as in this case, move in different directions in two or more units, aggregation has a tendency to mask or cancel out special causes. However, when minor shifts in data, that are too small to produce signals in the small multiple plots, move in the same direction the shifts tend to add up resulting in a better chance of detecting the special cause with aggregated data. As usual, the decision to aggregate or stratify must be taken deliberately, preferably by persons with a thorough understanding of the structures and processes that have produced data. And often it may be useful to produce several plots at different levels of aggregation. References ———. 2018. “qicharts2: Quality Improvement Charts for R.” JOSS. https://doi.org/10.21105/joss.0069. ———. 2024. Qicharts2: Quality Improvement Charts. https://CRAN.R-project.org/package=qicharts2. "],["case1.html", "Chapter 12 Case 1", " Chapter 12 Case 1 "],["case2.html", "Chapter 13 Case 2", " Chapter 13 Case 2 "],["case3.html", "Chapter 14 Case 3", " Chapter 14 Case 3 "],["diagnostics.html", "Chapter 15 Diagnostic Errors 15.1 Two types of errors when using SPC", " Chapter 15 Diagnostic Errors 15.1 Two types of errors when using SPC Classifying variation into common cause or special cause is the primary focus of statistical process control methodology. In practice, this classification is subject to two types of error which can be compared to an imperfect screening test that sometimes shows a patient has disease when in fact the patient is free from disease (false positive), or the patient is free from disease when in fact the patient has disease (false negative). Error 1 (false positive): Treating an outcome resulting from a common cause as if it were a special cause and (wrongly) seeking to find a special cause, when in fact the cause is the underlying process. Error 2 (false negative): Treating an outcome resulting from a special cause as if it were a common cause and so (wrongly) overlooking the special cause. Either mistake can cause losses. If all data were treated as special cause variation, this maximises the losses from mistake 1. And if all data were treated as common cause variation, this maximises the losses from mistake 2. Unfortunately, in practice it is impossible to reduce both mistakes to zero. Shewhart concluded that it was best to make either mistake only rarely and that this depended largely upon the costs of looking unnecessarily for special cause variation. Using mathematical theory, empirical evidence, and pragmatism, he argued that setting control limits to ± three standard deviations from the mean provides a reasonable balance between making the two types of mistakes. The choice of three standard deviations ensures there is a relatively small chance that an investigation of special cause variation will be unfounded. It has been argued that while three standard deviations was an appropriate choice for manufacturing industry, it is not stringent enough for healthcare processes – and two standard deviations may be more appropriate. Lowering the control limits to, say two standard deviations, will increase the sensitivity of the control chart, but will also increase the chances of false alarms. The extent to which this is acceptable requires decision-makers to balance the total costs (e.g. time, money, human resources, quality, safety, reputation) of investigating (true or false) signals versus the costs of overlooking these signals (and so not investigating). In practice, this is a matter of judgement which varies with context. Nevertheless, in the era of big data in healthcare the issue of false alarms needs greater appreciation and attention. We discuss this later in the book. "],["data-sets.html", "A Data Sets A.1 Bacteremia A.2 Blood pressure A.3 Clostridioides difficile infections A.4 Ceasearian section delay A.5 Emergency admission mortality A.6 On-time CT A.7 Radiation doses A.8 Robson group 1 births", " A Data Sets A.1 Bacteremia Hospital acquired and all cause bacteremias and 30 days mortality File: bacteremia.csv Variables: month (date): month of infection ha_infections (numeric): number of hospital acquired infections risk_days (numeric): number of patient days without infection deaths (numeric): 30-day mortality after all-cause infection patients (numeric): number of patients with all-cause infection A.2 Blood pressure Daily measurements of blood pressure and resting pulse. File: blood_pressure.csv Variables: date (date): date of measurement systolic (numeric): systolic blood pressure (mm Hg) diastolic (numeric): diastolic blood pressure (mm Hg) pulse (numeric): resting pulse (beats per minute) A.3 Clostridioides difficile infections Hospital acquired C. diff. infections File: cdiff.csv Variables: month (date): first day of month cases (numeric): number of cases risk_days (numeric): number of patient days without infection A.4 Ceasearian section delay Time to grade 2 C-section File: csection_delay.csv Variables: datetime (datetime): date and time of delivery month (date): first day of month delay (numeric): time in minutes between decision and delivery A.5 Emergency admission mortality 7-day mortality after emergency admission File: emergency_admission.csv Variables: month (date): first day of month deaths (numeric): number of deaths within 7 days after emergency admission admissions (numeric): number of emergency admissions A.6 On-time CT Patients with acute abdomen CT scanned within 3 hours after arrival File: ontime_ct.csv Variables: month (date): first day of month ct_on_time (numeric): number of patients scanned within 3 hours cases (numeric): number of patients with acute abdomen A.7 Radiation doses Radiation doses used for renography File: renography_doses.csv Variables: date (date): date of renography week (date): first day of week dose (numeric): radiation dose in megabequerel A.8 Robson group 1 births Outcomes and complications of Robson group 1 births: first time pregnancy, single baby, head first, gestational age at least 37 weeks. File: robson1_births.csv Variables: datetime (datetime): data and time of birth biweek (date): first day of biweekly period csect (logical): delivery by C-section cup (logical): delivery by vacuum extraction length (numeric): baby length in cm weight (numeric): baby weight in kg apgar (numeric): apgar score at 5 minutes ph (numeric): arterial umbilical chord pH asphyxia (logical): ph &lt; 7 or missing ph and apgar &lt; 7 "],["runs-limits.html", "B Critical Values for Longest Runs and Number of Crossings", " B Critical Values for Longest Runs and Number of Crossings Number of useful observations Upper limit for longest run Lower limit for number of crossings 10 6 2 11 6 2 12 7 3 13 7 3 14 7 4 15 7 4 16 7 4 17 7 5 18 7 5 19 7 6 20 7 6 21 7 6 22 7 7 23 8 7 24 8 8 25 8 8 26 8 8 27 8 9 28 8 9 29 8 10 30 8 10 31 8 11 32 8 11 33 8 11 34 8 12 35 8 12 36 8 13 37 8 13 38 8 14 39 8 14 40 8 14 41 8 15 42 8 15 43 8 16 44 8 16 45 8 17 46 9 17 47 9 17 48 9 18 49 9 18 50 9 19 51 9 19 52 9 20 53 9 20 54 9 21 55 9 21 56 9 21 57 9 22 58 9 22 59 9 23 60 9 23 61 9 24 62 9 24 63 9 25 64 9 25 65 9 25 66 9 26 67 9 26 68 9 27 69 9 27 70 9 28 71 9 28 72 9 29 73 9 29 74 9 29 75 9 30 76 9 30 77 9 31 78 9 31 79 9 32 80 9 32 81 9 33 82 9 33 83 9 34 84 9 34 85 9 34 86 9 35 87 9 35 88 9 36 89 9 36 90 9 37 91 10 37 92 10 38 93 10 38 94 10 39 95 10 39 96 10 39 97 10 40 98 10 40 99 10 41 100 10 41 "],["references.html", "References", " References Anhøj, Jacob. 2015. “Diagnostic Value of Run Chart Analysis: Using Likelihood Ratios to Compare Run Chart Rules on Simulated Data Series.” PLoS ONE. https://doi.org/10.1371/journal.pone.0121349. ———. 2018. “qicharts2: Quality Improvement Charts for R.” JOSS. https://doi.org/10.21105/joss.0069. ———. 2024. Qicharts2: Quality Improvement Charts. https://CRAN.R-project.org/package=qicharts2. Anhøj, Jacob, and Anne Vingaard Olesen. 2014. “Run Charts Revisited: A Simulation Study of Run Chart Rules for Detection of Non-Random Variation in Health Care Processes.” PLoS ONE. https://doi.org/10.1371/journal.pone.0113825. Anhøj, Jacob, and Tore Wentzel-Larsen. 2018. “Sense and Sensibility: On the Diagnostic Value of Control Chart Rules for Detection of Shifts in Time Series Data.” BMC Medical Research Methodology. https://doi.org/10.1186/s12874-018-0564-0. Jeppegaard, Maria, Steen C. Rasmussen, Jacob Anhøj, and Lone Krebs. 2023. “Winter, Spring, Summer or Fall: Temporal Patterns in Placenta-Mediated Pregnancy Complications—an Exploratory Analysis.” Gynecol Obstet 309: 1991–98. https://doi.org/https://doi.org/10.1007/s00404-023-07094-6. Mohammed, M A. 2024. Statistical Process Control. Elements of Improving Quality and Safety in Healthcare. Cambridge University Press. https://www.cambridge.org/core/elements/statistical-process-control/60B6025BF62017A9A203960A9E223C10. Mohammed, M A, P Worthington, and W H Woodall. 2008. “Plotting Basic Control Charts: Tutorial Notes for Healthcare Practitioners.” BMJ Qual Saf 17 (2): 137–45. https://doi.org/10.1136/qshc.2004.012047. Shewhart, Walther A. 1931. Economic Control of Quality of Manufactured Product. New York: D. Van Nostrand Company. Thor, Johan, Jonas Lundberg, Jakob Ask, Jesper Olsson, Cheryl Carli, Karin Pukk Härenstam, and Mats Brommels. 2007. “Application of Statistical Process Control in Healthcare Improvement: Systematic Review.” BMJ Qual Saf 16: 387–99. https://doi.org/10.1136/qshc.2006.022194. Western Electric Company. 1956. Statistical Quality Control Handbook. New York: Western Electric Company inc. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
